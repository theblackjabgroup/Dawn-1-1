{%- style -%}
  .container {
    perspective: 1000px; /* For the 3D swinging effect */
    max-width: 1200px;
    margin: 0 auto;
    position: relative;
  }
  
  .cards {
    width: 100%;
    height: auto;
    background-color: white;
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2);
    border-radius: 10px;
    transition: transform 0.1s ease-out;
    transform-style: preserve-3d;
    transform-origin: center;
    will-change: transform;
  }
  
  .play-pause-btn {
    position: absolute;
    top: 20px;
    right: 20px;
    z-index: 10;
    background-color: rgba(0, 0, 0, 0.7);
    color: white;
    border: none;
    padding: 10px;
    border-radius: 50%;
    cursor: pointer;
  }
  
  .play-pause-btn:hover {
    background-color: rgba(0, 0, 0, 0.9);
  }
  
  .play-pause-btn i {
    font-size: 16px;
    color: white;
  }
  
  .cards video, .cards iframe {
    width: 100%;
    height: 100%;
    border-radius: 10px;
    object-fit: cover;
  }
  {%- endstyle -%}
  
  <div class="video-section">
    <div class="video-container container">
      <button id="play-pause-btn" class="play-pause-btn">
        <i class="fas fa-pause"></i>
      </button>
      <div class="cards">
        {%- if section.settings.video_url != blank -%}
          {%- assign video_id = section.settings.video_url | split: "/" | last -%}
          {%- if section.settings.video_url contains 'youtube' -%}
            <iframe
              src="https://www.youtube.com/embed/{{ video_id }}?autoplay=1"
              allow="autoplay; encrypted-media"
              allowfullscreen
            ></iframe>
          {%- elsif section.settings.video_url contains 'vimeo' -%}
            <iframe
              src="https://player.vimeo.com/video/{{ video_id }}?autoplay=1"
              allow="autoplay; encrypted-media"
              allowfullscreen
            ></iframe>
          {%- endif -%}
        {%- else -%}
          <video id="autoplay-video" autoplay loop muted>
            <source src="{{ section.settings.video_file | file_url }}" type="video/mp4">
          </video>
        {%- endif -%}
      </div>
    </div>
  </div>
  
  <!-- Add FontAwesome for icons -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
  
  <script>
  const video = document.getElementById('autoplay-video');
  const playPauseBtn = document.getElementById('play-pause-btn');
  const icon = playPauseBtn.querySelector('i');
  
  // Play/Pause button functionality
  playPauseBtn.addEventListener('click', () => {
    if (video.paused) {
      video.play();
      icon.classList.remove('fa-play');
      icon.classList.add('fa-pause');
    } else {
      video.pause();
      icon.classList.remove('fa-pause');
      icon.classList.add('fa-play');
    }
  });
  
  // Swinging effect on scroll
  const card = document.querySelector('.cards');
  const container = document.querySelector('.container');
  let lastXRotate = 0;
  
  window.addEventListener('scroll', () => {
    const rect = container.getBoundingClientRect();
    const scrollPos = window.scrollY;
    const containerTop = container.offsetTop;
    const containerHeight = container.offsetHeight;
  
    if (scrollPos >= containerTop && scrollPos <= containerTop + containerHeight) {
      const yPos = (scrollPos - containerTop) / containerHeight;
      const xRotate = (yPos - 0.5) * -40;
      lastXRotate = xRotate;
      card.style.transform = `rotateX(${xRotate}deg)`;
    }
  
    if (rect.top > window.innerHeight || rect.bottom < 0) {
      card.style.transform = 'rotateX(0deg)';
      lastXRotate = 0;
    }
  });
  </script>
  
  {% schema %}
  {
    "name": "Video Section",
    
    "settings": [
      {
        "type": "video",
        "id": "video_file",
        "label": "Upload Video"
      },
      {
        "type": "video_url",
      "id": "video_url",
      "accept": ["youtube", "vimeo"],
      "default": "https://www.youtube.com/watch?v=_9VUPq3SxOc",
      "label": "Video URL"
      },
      {
        "type": "image_picker",
        "id": "cover_image",
        "label": "Cover Image"
      }
    ],
    "presets": [
      {
        "name": "Default video section",
        "category": "Video"
      }
    ]
  }
  {% endschema %}
  